#ifndef MYPYC_NATIVE_INTERNAL_295eace8438df6ec133b_H
#define MYPYC_NATIVE_INTERNAL_295eace8438df6ec133b_H
#include <Python.h>
#include <CPy.h>
#include "__native_295eace8438df6ec133b.h"

int CPyGlobalsInit(void);

extern PyObject *CPyStatics[628];
extern const char * const CPyLit_Str[];
extern const char * const CPyLit_Bytes[];
extern const char * const CPyLit_Int[];
extern const double CPyLit_Float[];
extern const double CPyLit_Complex[];
extern const int CPyLit_Tuple[];
extern const int CPyLit_FrozenSet[];
extern CPyModule *CPyModule_eth_portfolio____loaders____nonce_internal;
extern CPyModule *CPyModule_eth_portfolio____loaders____nonce;
extern PyObject *CPyStatic__nonce___globals;
extern CPyModule *CPyModule_builtins;
extern CPyModule *CPyModule_asyncio;
extern CPyModule *CPyModule_logging;
extern CPyModule *CPyModule_collections;
extern CPyModule *CPyModule_time;
extern CPyModule *CPyModule_typing;
extern CPyModule *CPyModule_a_sync;
extern CPyModule *CPyModule_dank_mids;
extern CPyModule *CPyModule_eth_typing;
extern CPyModule *CPyModule_eth_portfolio____loaders;
extern CPyModule *CPyModule_eth_portfolio____loaders___balances_internal;
extern CPyModule *CPyModule_eth_portfolio____loaders___balances;
extern PyObject *CPyStatic__loaders___balances___globals;
extern CPyModule *CPyModule_decimal;
extern CPyModule *CPyModule_y;
extern CPyModule *CPyModule_y____decorators;
extern CPyModule *CPyModule_y___datatypes;
extern CPyModule *CPyModule_eth_portfolio____decimal;
extern CPyModule *CPyModule_eth_portfolio____utils;
extern CPyModule *CPyModule_eth_portfolio___typing;
extern CPyModule *CPyModule_eth_portfolio____loaders___utils_internal;
extern CPyModule *CPyModule_eth_portfolio____loaders___utils;
extern PyObject *CPyStatic_utils___globals;
extern CPyModule *CPyModule_eth_retry;
extern CPyModule *CPyModule_msgspec;
extern CPyModule *CPyModule_async_lru;
extern CPyModule *CPyModule_eth_portfolio____argspec_internal;
extern CPyModule *CPyModule_eth_portfolio____argspec;
extern PyObject *CPyStatic__argspec___globals;
extern CPyModule *CPyModule_inspect;
extern CPyModule *CPyModule_eth_portfolio____config_internal;
extern CPyModule *CPyModule_eth_portfolio____config;
extern PyObject *CPyStatic__config___globals;
extern CPyModule *CPyModule_os;
extern CPyModule *CPyModule_eth_portfolio____shitcoins_internal;
extern CPyModule *CPyModule_eth_portfolio____shitcoins;
extern PyObject *CPyStatic__shitcoins___globals;
extern CPyModule *CPyModule_eth_portfolio____stableish_internal;
extern CPyModule *CPyModule_eth_portfolio____stableish;
extern PyObject *CPyStatic__stableish___globals;
extern CPyModule *CPyModule_eth_portfolio___constants_internal;
extern CPyModule *CPyModule_eth_portfolio___constants;
extern PyObject *CPyStatic_constants___globals;
extern CPyModule *CPyModule_brownie;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker_internal;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker;
extern PyObject *CPyStatic_docker___globals;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker___check_internal;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker___check;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker___docker_compose_internal;
extern CPyModule *CPyModule_eth_portfolio_scripts___docker___docker_compose;
extern PyObject *CPyStatic_check___globals;
extern CPyModule *CPyModule_functools;
extern CPyModule *CPyModule_subprocess;
extern PyObject *CPyStatic_docker_compose___globals;
extern CPyModule *CPyModule_importlib;
extern CPyModule *CPyModule_typing_extensions;
extern CPyModule *CPyModule_eth_portfolio_scripts___balances_internal;
extern CPyModule *CPyModule_eth_portfolio_scripts___balances;
extern PyObject *CPyStatic_eth_portfolio_scripts___balances___globals;
extern CPyModule *CPyModule_argparse;
extern CPyModule *CPyModule_datetime;
extern CPyModule *CPyModule_a_sync___asyncio;
extern CPyModule *CPyModule_eth_portfolio_scripts;
extern CPyModule *CPyModule_eth_portfolio_scripts____utils;
extern CPyModule *CPyModule_eth_portfolio_scripts____portfolio;
extern PyObject *CPyStatic__nonce___logger;
extern PyObject *CPyStatic__nonce___logger_is_enabled;
extern PyObject *CPyStatic__nonce_____log;
extern CPyTagged CPyStatic__nonce___DEBUG;
extern PyObject *CPyStatic__nonce___nonces;
extern PyObject *CPyStatic__nonce___locks;
extern PyObject *CPyStatic__nonce___get_transaction_count;
extern PyObject *CPyStatic__nonce___igather;
extern PyObject *CPyStatic__nonce___now;
extern PyObject *CPyStatic__nonce___BlockCache___lock;
extern PyTypeObject *CPyType__nonce___BlockCache;
extern PyObject *CPyDef__nonce___BlockCache(void);
extern PyTypeObject *CPyType__nonce_____mypyc_lambda__0_obj;
extern PyObject *CPyDef__nonce_____mypyc_lambda__0_obj(void);
extern PyTypeObject *CPyType__nonce___get_nonce_at_block_env;
extern PyObject *CPyDef__nonce___get_nonce_at_block_env(void);
extern PyTypeObject *CPyType__nonce___get_nonce_at_block_gen;
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen(void);
extern PyTypeObject *CPyType__nonce___get_block_for_nonce_env;
extern PyObject *CPyDef__nonce___get_block_for_nonce_env(void);
extern PyTypeObject *CPyType__nonce___get_block_for_nonce_gen;
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen(void);
extern PyTypeObject *CPyType__nonce____get_area_env;
extern PyObject *CPyDef__nonce____get_area_env(void);
extern PyTypeObject *CPyType__nonce____get_area_gen;
extern PyObject *CPyDef__nonce____get_area_gen(void);
extern PyTypeObject *CPyType__nonce___get_block_number_env;
extern PyObject *CPyDef__nonce___get_block_number_env(void);
extern PyTypeObject *CPyType__nonce___get_block_number_gen;
extern PyObject *CPyDef__nonce___get_block_number_gen(void);
extern PyObject *CPyDef__nonce_____mypyc_lambda__0_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy__nonce_____mypyc_lambda__0_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce_____mypyc_lambda__0_obj_____call__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce_____mypyc_lambda__0_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_nonce_at_block_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_nonce_at_block(PyObject *cpy_r_address, PyObject *cpy_r_block);
extern PyObject *CPyPy__nonce___get_nonce_at_block(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_for_nonce_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_for_nonce(PyObject *cpy_r_address, CPyTagged cpy_r_nonce);
extern PyObject *CPyPy__nonce___get_block_for_nonce(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce____get_area_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce____get_area_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce____get_area_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce____get_area_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy__nonce____get_area_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce____get_area_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce____get_area_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____get_area(PyObject *cpy_r_address, CPyTagged cpy_r_nonce, PyObject *cpy_r_lo, PyObject *cpy_r_hi, CPyTagged cpy_r_range_size);
extern PyObject *CPyPy__nonce____get_area(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce____update_nonces(PyObject *cpy_r_address, CPyTagged cpy_r_nonce, PyObject *cpy_r_block);
extern PyObject *CPyPy__nonce____update_nonces(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern CPyTagged CPyDef__nonce____get_num_chunks(CPyTagged cpy_r_range_size);
extern PyObject *CPyPy__nonce____get_num_chunks(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__nonce___BlockCache_____mypyc_defaults_setup(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___BlockCache_____mypyc_defaults_setup(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_block_number_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_number_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy__nonce___get_block_number_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_number_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy__nonce___get_block_number_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_number_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__nonce___get_block_number_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__nonce___get_block_number(void);
extern PyObject *CPyPy__nonce___get_block_number(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__nonce_____top_level__(void);
extern PyObject *CPyStatic__loaders___balances____ZERO;
extern PyObject *CPyStatic__loaders___balances___logger;
extern PyObject *CPyStatic__loaders___balances____builtin_round;
extern PyTypeObject *CPyType__loaders___balances___load_token_balance_env;
extern PyObject *CPyDef__loaders___balances___load_token_balance_env(void);
extern PyTypeObject *CPyType__loaders___balances___load_token_balance_gen;
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen(void);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy__loaders___balances___load_token_balance_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___load_token_balance(PyObject *cpy_r_token, PyObject *cpy_r_address, PyObject *cpy_r_block);
extern PyObject *CPyPy__loaders___balances___load_token_balance(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances____calc_value(PyObject *cpy_r_balance, PyObject *cpy_r_price);
extern PyObject *CPyPy__loaders___balances____calc_value(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__loaders___balances___round(PyObject *cpy_r_value, CPyTagged cpy_r_digits);
extern PyObject *CPyPy__loaders___balances___round(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__loaders___balances_____top_level__(void);
extern PyObject *CPyStatic_utils___Raw;
extern PyObject *CPyStatic_utils___get_transaction_receipt;
extern PyObject *CPyStatic_utils_____get_transaction_receipt;
extern PyTypeObject *CPyType_utils____get_transaction_receipt_env;
extern PyObject *CPyDef_utils____get_transaction_receipt_env(void);
extern PyTypeObject *CPyType_utils____get_transaction_receipt_gen;
extern PyObject *CPyDef_utils____get_transaction_receipt_gen(void);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_utils____get_transaction_receipt_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_utils____get_transaction_receipt(PyObject *cpy_r_txhash);
extern PyObject *CPyPy_utils____get_transaction_receipt(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_utils_____top_level__(void);
extern PyObject *CPyDef__argspec___get_args_type(PyObject *cpy_r_sample);
extern PyObject *CPyPy__argspec___get_args_type(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__argspec___get_kwargs_type(PyObject *cpy_r_sample);
extern PyObject *CPyPy__argspec___get_kwargs_type(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__argspec___get_return_type(PyObject *cpy_r_sample);
extern PyObject *CPyPy__argspec___get_return_type(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T3OOO CPyDef__argspec___get_types(PyObject *cpy_r_sample);
extern PyObject *CPyPy__argspec___get_types(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__argspec_____top_level__(void);
extern CPyTagged CPyStatic__config___REORG_BUFFER;
extern char CPyDef__config_____top_level__(void);
extern PyObject *CPyStatic__shitcoins___shitcoins;
extern char CPyDef__shitcoins_____top_level__(void);
extern PyObject *CPyStatic__stableish___stableish;
extern char CPyDef__stableish_____top_level__(void);
extern CPyTagged CPyStatic_constants___NUM_WALLETS;
extern PyObject *CPyStatic_constants___ADDRESSES;
extern PyObject *CPyStatic_constants___TRANSFER_SIGS;
extern PyObject *CPyStatic_constants___ETH_LIKE;
extern PyObject *CPyStatic_constants___BTC_LIKE;
extern PyObject *CPyStatic_constants___INTL_STABLECOINS;
extern char CPyDef_constants_____top_level__(void);
extern char CPyDef_docker_____top_level__(void);
extern char CPyDef_check___check_docker(void);
extern PyObject *CPyPy_check___check_docker(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_check___check_docker_compose(void);
extern PyObject *CPyPy_check___check_docker_compose(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_check___check_system(void);
extern PyObject *CPyPy_check___check_system(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_check_____top_level__(void);
extern PyObject *CPyStatic_docker_compose___logger;
extern PyObject *CPyStatic_docker_compose___compose_file;
extern PyTypeObject *CPyType_docker_compose___ensure_containers_env;
extern PyObject *CPyDef_docker_compose___ensure_containers_env(void);
extern PyTypeObject *CPyType_docker_compose___compose_wrap_ensure_containers_env;
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_env(void);
extern PyTypeObject *CPyType_docker_compose___compose_wrap_ensure_containers_obj;
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_obj(void);
extern PyTypeObject *CPyType_docker_compose___compose_wrap_ensure_containers_gen;
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen(void);
extern char CPyDef_docker_compose___up(PyObject *cpy_r_services);
extern PyObject *CPyPy_docker_compose___up(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_docker_compose___down(void);
extern PyObject *CPyPy_docker_compose___down(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_docker_compose___build(PyObject *cpy_r_services);
extern PyObject *CPyPy_docker_compose___build(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_docker_compose___stop(PyObject *cpy_r_container_name);
extern PyObject *CPyPy_docker_compose___stop(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___compose_wrap_ensure_containers_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_args, PyObject *cpy_r_kwargs);
extern PyObject *CPyPy_docker_compose___compose_wrap_ensure_containers_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_docker_compose___ensure_containers(PyObject *cpy_r_fn);
extern PyObject *CPyPy_docker_compose___ensure_containers(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_docker_compose____exec_command(PyObject *cpy_r_command, PyObject *cpy_r_compose_options);
extern PyObject *CPyPy_docker_compose____exec_command(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_docker_compose_____top_level__(void);
extern PyObject *CPyStatic_eth_portfolio_scripts___balances____UTC;
extern PyObject *CPyStatic_eth_portfolio_scripts___balances___create_task;
extern PyObject *CPyStatic_eth_portfolio_scripts___balances___yield_to_loop;
extern PyTypeObject *CPyType_eth_portfolio_scripts___balances___export_balances_env;
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_env(void);
extern PyTypeObject *CPyType_eth_portfolio_scripts___balances___export_balances_gen;
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen(void);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen_____mypyc_generator_helper__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback, PyObject *cpy_r_arg);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen_____mypyc_generator_helper__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen_____next__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen_____next__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen___send(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_arg);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen___send(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen_____iter__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen_____iter__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen___throw(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_type, PyObject *cpy_r_value, PyObject *cpy_r_traceback);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen___throw(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen___close(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen___close(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances_gen_____await__(PyObject *cpy_r___mypyc_self__);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances_gen_____await__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_eth_portfolio_scripts___balances___export_balances(PyObject *cpy_r_args);
extern PyObject *CPyPy_eth_portfolio_scripts___balances___export_balances(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_eth_portfolio_scripts___balances_____top_level__(void);
#endif
